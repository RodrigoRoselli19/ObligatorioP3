// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ObligatorioP3.datos;

#nullable disable

namespace ObligatorioP3.Migrations
{
    [DbContext(typeof(aplicationDBContext))]
    [Migration("20230616003045_TablaProyecciones")]
    partial class TablaProyecciones
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ObligatorioP3.Models.Peliculas", b =>
                {
                    b.Property<int>("PeliculasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeliculasId"), 1L, 1);

                    b.Property<string>("Des_Pel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Des_Pel");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Genero_Pel");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Titulo_Pel");

                    b.HasKey("PeliculasId");

                    b.ToTable("Peliculas");
                });

            modelBuilder.Entity("ObligatorioP3.Models.Proyecciones", b =>
                {
                    b.Property<int>("ProyeccionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProyeccionId"), 1L, 1);

                    b.Property<DateTime?>("FechayHora")
                        .HasColumnType("datetime");

                    b.Property<int?>("ProyeccionesProyeccionId")
                        .HasColumnType("int");

                    b.Property<int>("idPelicula")
                        .HasColumnType("int");

                    b.Property<int>("idSala")
                        .HasColumnType("int");

                    b.HasKey("ProyeccionId");

                    b.HasIndex("ProyeccionesProyeccionId");

                    b.HasIndex("idPelicula");

                    b.HasIndex("idSala");

                    b.ToTable("proyecciones");
                });

            modelBuilder.Entity("ObligatorioP3.Models.Salas", b =>
                {
                    b.Property<int>("IdSala")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSala"), 1L, 1);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("NroSala")
                        .HasColumnType("int");

                    b.Property<int?>("SalasIdSala")
                        .HasColumnType("int");

                    b.HasKey("IdSala");

                    b.HasIndex("SalasIdSala");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("ObligatorioP3.Models.Proyecciones", b =>
                {
                    b.HasOne("ObligatorioP3.Models.Proyecciones", null)
                        .WithMany("asientosReservados")
                        .HasForeignKey("ProyeccionesProyeccionId");

                    b.HasOne("ObligatorioP3.Models.Peliculas", "Peliculas")
                        .WithMany()
                        .HasForeignKey("idPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObligatorioP3.Models.Salas", "Salas")
                        .WithMany()
                        .HasForeignKey("idSala")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Peliculas");

                    b.Navigation("Salas");
                });

            modelBuilder.Entity("ObligatorioP3.Models.Salas", b =>
                {
                    b.HasOne("ObligatorioP3.Models.Salas", null)
                        .WithMany("AsientosDisponibles")
                        .HasForeignKey("SalasIdSala");
                });

            modelBuilder.Entity("ObligatorioP3.Models.Proyecciones", b =>
                {
                    b.Navigation("asientosReservados");
                });

            modelBuilder.Entity("ObligatorioP3.Models.Salas", b =>
                {
                    b.Navigation("AsientosDisponibles");
                });
#pragma warning restore 612, 618
        }
    }
}
